<?xml version="1.0"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>place_your_blog_title_here</title>
    <link>place_your_blog_url_here</link>
    <atom:link href="place_your_blog_url_here/rss.xml" rel="self" type="application/rss+xml" />
    <description>place_your_blog_description_here</description>
    <language>place_your_blog_language_here</language>
    <pubDate>Wed, 28 Jan 2015 11:26:31 +0800</pubDate>
    <lastBuildDate>Wed, 28 Jan 2015 11:26:31 +0800</lastBuildDate>

    
    <item>
      <title>nodejs第一个例子</title>
      <link>place_your_blog_url_here/2015/01/28/nodejs.html</link>
      <pubDate>28 Jan 2015</pubDate>
      <author>place_your_name_here</author>
      <guid>place_your_blog_url_here/2015/01/28/nodejs</guid>
      <description>&lt;p&gt;nodejs第一个例子&lt;/p&gt;

&lt;h2 id=&quot;gitnodejs&quot;&gt;用git下载node.js最新版&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;git clone git://github.com/ry/node.git
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;section&quot;&gt;或者直接下载源码&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;wget http://nodejs.org/dist/node-v0.8.2.tar.gz
tar -xf node-v0.8.2.tar.gz
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;nodejs&quot;&gt;开始编译安装node.js&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;cd node-v0.8.2
./configure
make
sudo make install
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;node-v-node-versionnodejs&quot;&gt;输入node –v 或者node –version可以查看node.js当前的版本&lt;/h3&gt;

&lt;h3 id=&quot;nodejs-1&quot;&gt;运行第一个node.js的程序&lt;/h3&gt;

&lt;h3 id=&quot;examplejs&quot;&gt;在主文件夹中创建example.js，编辑文本&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;var http = require('http');
  http.createServer(function (req, res) {
  res.writeHead(200, {'Content-Type': 'text/plain'});
  res.end('Hello Node.js');
}).listen(8124, &quot;127.0.0.1&quot;);
console.log('Server running at http://127.0.0.1:8124/'); 
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;node-examplejs&quot;&gt;之后在命令行输入node example.js,&lt;/h3&gt;

&lt;h3 id=&quot;http1270018124&quot;&gt;打开浏览器输入http://127.0.0.1:8124/’&lt;/h3&gt;

&lt;h3 id=&quot;hello-nodejs&quot;&gt;显示Hello Node.js&lt;/h3&gt;

&lt;h3 id=&quot;nodejs-&quot;&gt;恭喜你你已经nodejs 入门了&lt;/h3&gt;
</description>
    </item>
    
    <item>
      <title>thinkphpajax分页</title>
      <link>place_your_blog_url_here/2015/01/27/thinkphpajaxpage.html</link>
      <pubDate>27 Jan 2015</pubDate>
      <author>place_your_name_here</author>
      <guid>place_your_blog_url_here/2015/01/27/thinkphpajaxpage</guid>
      <description>&lt;p&gt;thinkphpajax分页
Thinkphp目录的Lib\ORG\Util\目录里新建AjaxPage.class.php,写入一下内容：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;?php
// +----------------------------------------------------------------------
// | ThinkPHP [ WE CAN DO IT JUST THINK IT ]
// +----------------------------------------------------------------------
// | Copyright (c) 2009 http://thinkphp.cn All rights reserved.
// +----------------------------------------------------------------------
// | Licensed ( http://www.apache.org/licenses/LICENSE-2.0 )
// +----------------------------------------------------------------------
// | Author: liu21st &amp;lt;liu21st@gmail.com&amp;gt;
// +----------------------------------------------------------------------
// $Id: Page.class.php 2712 2012-02-06 10:12:49Z liu21st $

class AjaxPage {
    // 分页栏每页显示的页数
    public $rollPage = 5;
    // 页数跳转时要带的参数
    public $parameter  ;
    // 默认列表每页显示行数
    public $listRows = 20;
    // 起始行数
    public $firstRow ;
    // 分页总页面数
    protected $totalPages  ;
    // 总行数
    protected $totalRows  ;
    // 当前页数
    protected $nowPage    ;
    // 分页的栏的总页数
    protected $coolPages   ;
    // 分页显示定制
    protected $config  = array('header'=&amp;gt;'条记录','prev'=&amp;gt;'上一页','next'=&amp;gt;'下一页','first'=&amp;gt;'第一页','last'=&amp;gt;'最后一页','theme'=&amp;gt;' %totalRow% %header% %nowPage%/%totalPage% 页 %upPage% %downPage% %first%  %prePage%  %linkPage%  %nextPage% %end%');
    // 默认分页变量名
    protected $varPage;


    public function __construct($totalRows,$listRows='',$ajax_func,$parameter='') {
        $this-&amp;gt;totalRows = $totalRows;
        $this-&amp;gt;ajax_func = $ajax_func;
        $this-&amp;gt;parameter = $parameter;
        $this-&amp;gt;varPage = C('VAR_PAGE') ? C('VAR_PAGE') : 'p' ;
        if(!empty($listRows)) {
            $this-&amp;gt;listRows = intval($listRows);
        }
        $this-&amp;gt;totalPages = ceil($this-&amp;gt;totalRows/$this-&amp;gt;listRows);     //总页数
        $this-&amp;gt;coolPages  = ceil($this-&amp;gt;totalPages/$this-&amp;gt;rollPage);
        $this-&amp;gt;nowPage  = !empty($_GET[$this-&amp;gt;varPage])?intval($_GET[$this-&amp;gt;varPage]):1;
        if(!empty($this-&amp;gt;totalPages) &amp;amp;&amp;amp; $this-&amp;gt;nowPage&amp;gt;$this-&amp;gt;totalPages) {
            $this-&amp;gt;nowPage = $this-&amp;gt;totalPages;
        }
        $this-&amp;gt;firstRow = $this-&amp;gt;listRows*($this-&amp;gt;nowPage-1);
    }

public function setConfig($name,$value) {
        if(isset($this-&amp;gt;config[$name])) {
            $this-&amp;gt;config[$name]    =   $value;
        }
    }


    public function show() {
        if(0 == $this-&amp;gt;totalRows) return '';
        $p = $this-&amp;gt;varPage;
        $nowCoolPage      = ceil($this-&amp;gt;nowPage/$this-&amp;gt;rollPage);
        $url  =  $_SERVER['REQUEST_URI'].(strpos($_SERVER['REQUEST_URI'],'?')?'':&quot;?&quot;).$this-&amp;gt;parameter;
        $parse = parse_url($url);
        if(isset($parse['query'])) {
            parse_str($parse['query'],$params);
            unset($params[$p]);
            $url   =  $parse['path'].'?'.http_build_query($params);
        }
        //上下翻页字符串
        $upRow   = $this-&amp;gt;nowPage-1;
        $downRow = $this-&amp;gt;nowPage+1;
        if ($upRow&amp;gt;0){
            $upPage=&quot;&amp;lt;a id='big' href='javascript:&quot;.$this-&amp;gt;ajax_func.&quot;(&quot;.$upRow.&quot;)'&amp;gt;&quot;.$this-&amp;gt;config['prev'].&quot;&amp;lt;/a&amp;gt;&quot;;
        }else{
            $upPage=&quot;&quot;;
        }

if ($downRow &amp;lt;= $this-&amp;gt;totalPages){
            $downPage=&quot;&amp;lt;a id='big' href='javascript:&quot;.$this-&amp;gt;ajax_func.&quot;(&quot;.$downRow.&quot;)'&amp;gt;&quot;.$this-&amp;gt;config['next'].&quot;&amp;lt;/a&amp;gt;&quot;;
        }else{
            $downPage=&quot;&quot;;
        }
        // &amp;lt;&amp;lt; &amp;lt; &amp;gt; &amp;gt;&amp;gt;
        if($nowCoolPage == 1){
            $theFirst = &quot;&quot;;
            $prePage = &quot;&quot;;
        }else{
            $preRow =  $this-&amp;gt;nowPage-$this-&amp;gt;rollPage;
            $prePage = &quot;&amp;lt;a id='big' href='javascript:&quot;.$this-&amp;gt;ajax_func.&quot;(&quot;.$preRow.&quot;)'&amp;gt;上&quot;.$this-&amp;gt;rollPage.&quot;页&amp;lt;/a&amp;gt;&quot;;
            $theFirst = &quot;&amp;lt;a id='big' href='javascript:&quot;.$this-&amp;gt;ajax_func.&quot;(1)' &amp;gt;&quot;.$this-&amp;gt;config['first'].&quot;&amp;lt;/a&amp;gt;&quot;;
        }
        if($nowCoolPage == $this-&amp;gt;coolPages){
            $nextPage = &quot;&quot;;
            $theEnd=&quot;&quot;;
        }else{
            $nextRow = $this-&amp;gt;nowPage+$this-&amp;gt;rollPage;
            $theEndRow = $this-&amp;gt;totalPages;
            $nextPage = &quot;&amp;lt;a id='big' href='javascript:&quot;.$this-&amp;gt;ajax_func.&quot;(&quot;.$nextRow.&quot;)' &amp;gt;下&quot;.$this-&amp;gt;rollPage.&quot;页&amp;lt;/a&amp;gt;&quot;;
            $theEnd = &quot;&amp;lt;a id='big' href='javascript:&quot;.$this-&amp;gt;ajax_func.&quot;(&quot;.$theEndRow.&quot;)' &amp;gt;&quot;.$this-&amp;gt;config['last'].&quot;&amp;lt;/a&amp;gt;&quot;;
        }
        // 1 2 3 4 5
        $linkPage = &quot;&quot;;
        for($i=1;$i&amp;lt;=$this-&amp;gt;rollPage;$i++){
            $page=($nowCoolPage-1)*$this-&amp;gt;rollPage+$i;
            if($page!=$this-&amp;gt;nowPage){
                if($page&amp;lt;=$this-&amp;gt;totalPages){
                   $linkPage .= &quot;&amp;amp;nbsp;&amp;lt;a id='big' href='javascript:&quot;.$this-&amp;gt;ajax_func.&quot;(&quot;.$page.&quot;)'&amp;gt;&amp;amp;nbsp;&quot;.$page.&quot;&amp;amp;nbsp;&amp;lt;/a&amp;gt;&quot;;
                }else{
                    break;
                }
            }else{
                if($this-&amp;gt;totalPages != 1){
                    $linkPage .= &quot;&amp;amp;nbsp;&amp;lt;span class='current'&amp;gt;&quot;.$page.&quot;&amp;lt;/span&amp;gt;&quot;;
                }
            }
        }
        $pageStr  =  str_replace(
            array('%header%','%nowPage%','%totalRow%','%totalPage%','%upPage%','%downPage%','%first%','%prePage%','%linkPage%','%nextPage%','%end%'),
            array($this-&amp;gt;config['header'],$this-&amp;gt;nowPage,$this-&amp;gt;totalRows,$this-&amp;gt;totalPages,$upPage,$downPage,$theFirst,$prePage,$linkPage,$nextPage,$theEnd),$this-&amp;gt;config['theme']);
        return $pageStr;
    }

}

?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;控制器里写入以下内容：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;?php
class UserAction extends Action{
    public function user(){
          import(&quot;ORG.Util.AjaxPage&quot;);// 导入分页类  注意导入的是自己写的AjaxPage类
          $credit = M('user');
          $count = $credit-&amp;gt;count(); //计算记录数
        $limitRows = 5; // 设置每页记录数
       
        $p = new AjaxPage($count, $limitRows,&quot;user&quot;); //第三个参数是你需要调用换页的ajax函数名
        $limit_value = $p-&amp;gt;firstRow . &quot;,&quot; . $p-&amp;gt;listRows;
       
        $data = $credit-&amp;gt;order('id desc')-&amp;gt;limit($limit_value)-&amp;gt;select(); // 查询数据
        $page = $p-&amp;gt;show(); // 产生分页信息，AJAX的连接在此处生成

        $this-&amp;gt;assign('list',$data);
        $this-&amp;gt;assign('page',$page);
        $this-&amp;gt;display();

     }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;=========我是分界线======================================================&lt;/p&gt;

&lt;p&gt;模板文件如下：&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Ajax无刷新分页&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;../Public/jquery-1.7.2.min.js&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;//user函数名 一定要和action中的第三个参数一致上面有&lt;/span&gt;
                 &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;User/user&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;p&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//用get方法发送信息到UserAction中的user方法&lt;/span&gt;
                     &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;#user&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;replaceWith&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;lt;div  id=&amp;#39;user&amp;#39;&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;lt;/div&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//user一定要和tpl中的一致&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
             &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;user&amp;#39;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;   &lt;span class=&quot;c&quot;&gt;&amp;lt;!--这里的user和下面js中的test要一致--&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;nt&quot;&gt;&amp;lt;volist&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;list&amp;#39;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;list&amp;#39;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;   &lt;span class=&quot;c&quot;&gt;&amp;lt;!--内容输出--&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;err&quot;&gt;&amp;lt;&lt;/span&gt;{$list.id}&amp;gt;&lt;span class=&quot;ni&quot;&gt;&amp;amp;nbsp;&amp;amp;nbsp;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;lt;&lt;/span&gt;{$list.username}&amp;gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;br/&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/volist&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;err&quot;&gt;&amp;lt;&lt;/span&gt;{$page}&amp;gt;  &lt;span class=&quot;c&quot;&gt;&amp;lt;!--分页输出--&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>ubuntu-php5.5.9安装mongodb数据库扩展</title>
      <link>place_your_blog_url_here/2015/01/26/ubuntuphpExt.html</link>
      <pubDate>26 Jan 2015</pubDate>
      <author>place_your_name_here</author>
      <guid>place_your_blog_url_here/2015/01/26/ubuntuphpExt</guid>
      <description>&lt;p&gt;ubuntu-php5.5.9安装mongodb数据库扩展&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;1. wget http://pecl.php.net/get/mongo-1.4.5.tgz
2. tar zxvf mongo-1.4.5.tgz
3. cd mongo-1.4.5
4. phpize(运行此命令生成./configureure)
5. ./configureure
6. make
7. sudo make install( 此地方最好加sudo 用root权限执行。本人就在这个地方卡了很久)
8. 查找php.ini。在php.ini里加入extension=mongo.so这行
9.重启apache2 ：service apache2 restart(最好重启一下系统)
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>黄梁一梦</title>
      <link>place_your_blog_url_here/feeling/2015/01/20/feeling.html</link>
      <pubDate>20 Jan 2015</pubDate>
      <author>place_your_name_here</author>
      <guid>place_your_blog_url_here/feeling/2015/01/20/feeling</guid>
      <description>&lt;p&gt;我欲梦中醉，梦无心醉。
&lt;img src=&quot;http://aliimg.changba.com/cache/photo/101804501_640_640.jpg&quot; alt=&quot;Alt text&quot; title=&quot;我欲梦中醉，梦无心醉&quot; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;你诺不离，我定不弃。
你诺离，请说明理由。

你已离，待峰回路转。
愿安好！！

安好即可！
&lt;/code&gt;&lt;/pre&gt;

</description>
    </item>
    
    <item>
      <title>动态添加js</title>
      <link>place_your_blog_url_here/home/2015/01/15/addjs.html</link>
      <pubDate>15 Jan 2015</pubDate>
      <author>place_your_name_here</author>
      <guid>place_your_blog_url_here/home/2015/01/15/addjs</guid>
      <description>&lt;p&gt;代码如下:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;button&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;button&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;onclick=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;loadjs()&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;loadjs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;oHead&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementsByTagName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;HEAD&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;oScript&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;script&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;oScript&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;oScript&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;/userlist.js&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;oHead&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;appendChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;oScript&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

</description>
    </item>
    
    <item>
      <title>jquerypost提交方法</title>
      <link>place_your_blog_url_here/home/2015/01/14/jquerypost.html</link>
      <pubDate>14 Jan 2015</pubDate>
      <author>place_your_name_here</author>
      <guid>place_your_blog_url_here/home/2015/01/14/jquerypost</guid>
      <description>&lt;p&gt;jquerypost提交方法&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;$.post(&amp;quot;{:U(&amp;#39;Admin/Messmassage/SendMsg&amp;#39;)}&amp;quot;, {//提交的Url
id: &amp;#39;asd&amp;#39;//提交的数据
},
 function(data, status) {//回调函数
	alert(data.message)
 });&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

</description>
    </item>
    
    <item>
      <title>Linq例子</title>
      <link>place_your_blog_url_here/home/2014/10/23/linq.html</link>
      <pubDate>23 Oct 2014</pubDate>
      <author>place_your_name_here</author>
      <guid>place_your_blog_url_here/home/2014/10/23/linq</guid>
      <description>&lt;p&gt;LINQ，语言集成查询（Language Integrated Query）是一组用于c#和Visual Basic语言的扩展。它允许编写C#或者Visual Basic代码以查询数据库相同的方式操作内存数据。&lt;/p&gt;

&lt;h1 id=&quot;linqsql&quot;&gt;一，linq对应sql的代码&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;1.查询stu_a表全部数据	
linq 
	from a in stu_a
	select a
sql 
	select ×
	from stu_a
2.查询stu_a表id=1的数据
linq 
	from a in stu_a
	where a.id==1
	select a
sql 
	select ×
	from stu_a
	where id=1
3.查询表赋值别名列e
linq 
	from a in stu_a
	select new
	{
		序号=a.id,
		姓名=a.name
	}
sql 
	select id as '序号',name as '姓名'
	from stu_a
3查询多表数据
linq 
	from a in stu_a
	join b in stu_b
	on a.ID equals b.ID
	select new
	{
		序号=a.id,
		姓名=b.name
	}
sql 
	select stu_a.id as '序号',stu_b.name as '姓名'
	from stu_a,stu_b
&lt;/code&gt;&lt;/pre&gt;

</description>
    </item>
    
    <item>
      <title>Nosql数据库之MongoDB</title>
      <link>place_your_blog_url_here/home/2014/10/22/mongodb.html</link>
      <pubDate>22 Oct 2014</pubDate>
      <author>place_your_name_here</author>
      <guid>place_your_blog_url_here/home/2014/10/22/mongodb</guid>
      <description>&lt;p&gt;———————–原创——————–
show dbs //列出服务器中所有数据库&lt;/p&gt;

&lt;p&gt;use foo   //到foo数据库&lt;/p&gt;

&lt;p&gt;show collections //列出foo数据库中的数据表&lt;/p&gt;

&lt;p&gt;db.bar.find() //查询foo数据库中bar表中所有数据&lt;/p&gt;

&lt;p&gt;db.bar.insert({“Name”:”张三”}) //插入Name为张三到bar表&lt;/p&gt;

&lt;p&gt;例子
一、—–插入—–&lt;/p&gt;

&lt;p&gt;1.use foo //到foo数据库&lt;/p&gt;

&lt;p&gt;2.db.bar.insert({“Name”:”张三”}) //插入列名为Name,内容为’张三’到bar表 &lt;/p&gt;

&lt;p&gt;二、——查询——-
use foo //到foo数据库
db.bar.find() //查询foo数据库bar表中的全部内容。(注意:查询出来的数据为json格式的)&lt;/p&gt;

&lt;p&gt;db.bar.find({“Name”:”张三”}) //查询foo数据库bar表中Name=张三的数据。&lt;/p&gt;

&lt;p&gt;———————–网络资料———————-&lt;/p&gt;

&lt;p&gt;Mongo客户端常用命令&lt;/p&gt;

&lt;p&gt;一、数据库相关命令 &lt;br /&gt;
1  show dbs // 列出所有数据库   &lt;br /&gt;
2  use memo // 使用数据库memo。即使这个数据库不存在也可以执行，但该数据库不会立刻被新建，要等到执行了insert之类的操作时，才会建立这个数据库 &lt;br /&gt;
  www.2cto.com  &lt;br /&gt;
3   show collections // 列出当前数据库的collections  &lt;br /&gt;
4   查看各collection的状态  db.printCollectionStats()  &lt;br /&gt;
5   db // 显示当前数据库   &lt;br /&gt;
6   show users // 列出用户  &lt;br /&gt;
7   db.system.users.find()  // 列出用户    &lt;/p&gt;

&lt;p&gt;8   db.removeUser(‘user1’) //删除用户 &lt;br /&gt;
9   db.c1.drop()//删除集合c1 &lt;br /&gt;
10  db.dropDatabase()//删除当前的数据库   二、安全与认证 &lt;br /&gt;
1  use shine // 如果要root权限，就用admin库   &lt;br /&gt;
  www.2cto.com&lt;br /&gt;
2   db.addUser(“username”, “password”) // 普通权限，可读写   &lt;br /&gt;
3  db.addUser(“username”, “password”, true)  // 只可读，不可写     &lt;/p&gt;

&lt;p&gt;4   db.system.users.remove({user: username}) // 删除用户     1   db.c1.save({name:”zhangsan”,age:18}) //没有写主键，系统会自动生成一个主键，主键名为_id，    2 .每个MongoDB的document都有一个_id字段作为它的第一个属性，这个值通常是一个BSON对象id，因此，这个id对于集合中的每个成员 都是唯一的，如果用户插入一个document没有提供一个id，数据库将自动生成一个id，并存储在_id字段。   &lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;db.c1.save({_id:1,name:”lisi”,age:22})//自己填写id主键值，id主键值可以是字符串类型，也可以是数字类型   &lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;db.c1.save({“name” : “MongoDB”,”type” : “database”,”count” : 1,”info” : {x : 203,y : 102}})       四、创建索引： &lt;br /&gt;
1   coll.ensureIndex({productid:1}) // 在productid上建立普通索引   &lt;br /&gt;
2   coll.ensureIndex({district:1, plate:1}) // 多字段索引   &lt;br /&gt;
3   coll.ensureIndex({productid:1}, {unique:true}) // 唯一索引   &lt;br /&gt;
4   coll.ensureIndex({productid:1}, {unique:true, dropDups:true|) // 建索引时，如果遇到索引字段值已经出现过的情况，则删除重复记录     &lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;5   coll.getIndexes() // 查看索引   &lt;br /&gt;
6   coll.dropIndex({productid:1}) // 删除单个索引     1.  db.coll.find() // select * from coll  &lt;br /&gt;
2.  db.coll.find().limit(10) // select * from coll limit 10  &lt;br /&gt;
3.  db.coll.find().sort({x:1}) // select * from coll order by x asc  &lt;br /&gt;
4.  db.coll.find().sort({x:-1}) // select * from coll order by x desc  &lt;br /&gt;
5.  db.coll.find().sort({x:1}).skip(5).limit(10) // select * from coll order by x asc limit 5, 10    &lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;db.coll.find({x:10}) // select * from coll where x = 10    &lt;/li&gt;
  &lt;li&gt;db.coll.find({x: {$lt:10}}) // select * from coll where x &amp;lt;= 10    &lt;/li&gt;
  &lt;li&gt;db.coll.find({}, {y:true}) // select y from coll    &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;通过游标访问数据&lt;br /&gt;
.&amp;gt; var cursor = db.collect1.find();&lt;br /&gt;
&amp;gt; while(cursor.hasNext()) printjson(cursor.next())&lt;br /&gt;
当数据超过20行时候，使用it命令查看更多数据      通过forEach&lt;br /&gt;
10&amp;gt; db.collect1.find().forEach(printjson)  &lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;在mongo shell中，你可以将游标认为是数组&lt;br /&gt;
12&amp;gt; var cursor =db.collect1.find();&lt;br /&gt;
13.&amp;gt; printjson(cursor[4])&lt;br /&gt;
14{ “_id” : ObjectId(“4c691e72ed2a47b462dfa806”), “x” : 4, “y” : 3 }&lt;br /&gt;
使用这种方式存取需要注意的是，在cursor[4]之前的所有数据都会同时被加载到内存，对于很大的结果集，这样操作是不恰当的，会导致内存溢出，当查询巨大数据量大时候，游标应当作为迭代器使用。
 www.2cto.com&lt;br /&gt;
SQL语句不能做到的,mongo也可以做到  &lt;/li&gt;
  &lt;li&gt;coll.find({“address.city”:”gz”}) // 搜索嵌套文档address中city值为gz的记录    &lt;/li&gt;
  &lt;li&gt;coll.find({likes:”math”}) // 搜索数组    &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;coll.ensureIndex({“address.city”:1}) // 在嵌套文档的字段上建   1.  db.user.update({uid:1},{$set:{age:26}}) //update user set age=26 where uid=1  &lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;db.user.update({uid:1},{$inc:{age:1}}) //update user set age=age+1 where uid=1   1.db.user.delete({uid:1})//delete user where uid=1 
2.db.Position.remove({“id”:10}) //delete * from Position where id=10 1.  // json或csv格式，每次一个collection     &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;mongoexport -d producttrade -c basic -o /home/data/mongo_backup/producttrade_100504.json  &lt;br /&gt;
145.3.  mongoimport -d producttrade -c basic –drop /home/data/mongo_backup/producttrade_100504.json      // 二进制数据格式，常用于备份、还原   &lt;br /&gt;
2  mongodump -d shine -o /home/data/mongo_backup   &lt;br /&gt;
3  mongorestore -d shine –drop /home/data/mongo_backup/shine 
———————————————&lt;/p&gt;

&lt;p&gt;shell#查询
查询 name = “bruce” 的数据
db.users.find({ name : “bruce” });&lt;/p&gt;

&lt;p&gt;条件操作符
$gt : &amp;gt;
$lt : &amp;lt;
$gte: &amp;gt;=
$lte: &amp;lt;=
$ne : !=、&amp;lt;&amp;gt;
$in : in
$nin: not in
$all: all
$not: 反匹配(1.3.3及以上版本)&lt;/p&gt;

&lt;p&gt;查询 name &amp;lt;&amp;gt; “bruce” and age &amp;gt;= 18 的数据
db.users.find({name: {$ne: “bruce”}, age: {$gte: 18}});&lt;/p&gt;

&lt;p&gt;查询 creation_date &amp;gt; ‘2010-01-01’ and creation_date &amp;lt;= ‘2010-12-31’ 的数据
db.users.find({creation_date:{$gt:new Date(2010,0,1), $lte:new Date(2010,11,31)});&lt;/p&gt;

&lt;p&gt;查询 age in (20,22,24,26) 的数据
db.users.find({age: {$in: [20,22,24,26]}});&lt;/p&gt;

&lt;p&gt;查询 age取模10等于0 的数据
db.users.find(‘this.age % 10 == 0’);
或者
db.users.find({age : {$mod : [10, 0]}});&lt;/p&gt;

&lt;p&gt;匹配所有
db.users.find({favorite_number : {$all : [6, 8]}});
可以查询出{name: ‘David’, age: 26, favorite_number: [ 6, 8, 9 ] }
可以不查询出{name: ‘David’, age: 26, favorite_number: [ 6, 7, 9 ] }&lt;/p&gt;

&lt;p&gt;查询不匹配name=B&lt;em&gt;带头的记录
db.users.find({name: {$not: /^B.&lt;/em&gt;/}});
查询 age取模10不等于0 的数据
db.users.find({age : {$not: {$mod : [10, 0]}}});&lt;/p&gt;

&lt;h1 id=&quot;section&quot;&gt;返回部分字段&lt;/h1&gt;
&lt;p&gt;选择返回age和_id字段(_id字段总是会被返回)
db.users.find({}, {age:1});
db.users.find({}, {age:3});
db.users.find({}, {age:true});
db.users.find({ name : “bruce” }, {age:1});
0为false, 非0为true&lt;/p&gt;

&lt;p&gt;选择返回age、address和_id字段
db.users.find({ name : “bruce” }, {age:1, address:1});&lt;/p&gt;

&lt;p&gt;排除返回age、address和_id字段
db.users.find({}, {age:0, address:false});
db.users.find({ name : “bruce” }, {age:0, address:false});&lt;/p&gt;

&lt;p&gt;数组元素个数判断
对于{name: ‘David’, age: 26, favorite_number: [ 6, 7, 9 ] }记录
匹配db.users.find({favorite_number: {$size: 3}});
不匹配db.users.find({favorite_number: {$size: 2}});&lt;/p&gt;

&lt;p&gt;$exists判断字段是否存在
查询所有存在name字段的记录
db.users.find({name: {$exists: true}});
查询所有不存在phone字段的记录
db.users.find({phone: {$exists: false}});&lt;/p&gt;

&lt;p&gt;$type判断字段类型
查询所有name字段是字符类型的
db.users.find({name: {$type: 2}});
查询所有age字段是整型的
db.users.find({age: {$type: 16}});&lt;/p&gt;

&lt;p&gt;对于字符字段，可以使用正则表达式
查询以字母b或者B带头的所有记录
db.users.find({name: /^b.*/i});&lt;/p&gt;

&lt;p&gt;$elemMatch(1.3.1及以上版本)
为数组的字段中匹配其中某个元素&lt;/p&gt;

&lt;p&gt;Javascript查询和$where查询
查询 age &amp;gt; 18 的记录，以下查询都一样
db.users.find({age: {$gt: 18}});
db.users.find({$where: “this.age &amp;gt; 18”});
db.users.find(“this.age &amp;gt; 18”);
f = function() {return this.age &amp;gt; 18} db.users.find(f);&lt;/p&gt;

&lt;p&gt;排序sort()
以年龄升序asc
db.users.find().sort({age: 1});
以年龄降序desc
db.users.find().sort({age: -1});&lt;/p&gt;

&lt;p&gt;限制返回记录数量limit()
返回5条记录
db.users.find().limit(5);
返回3条记录并打印信息
db.users.find().limit(3).forEach(function(user) {print(‘my age is ‘ + user.age)});
结果
my age is 18
my age is 19
my age is 20&lt;/p&gt;

&lt;p&gt;限制返回记录的开始点skip()
从第3条记录开始，返回5条记录(limit 3, 5)
db.users.find().skip(3).limit(5);&lt;/p&gt;

&lt;p&gt;查询记录条数count()
db.users.find().count();
db.users.find({age:18}).count();
以下返回的不是5，而是user表中所有的记录数量
db.users.find().skip(10).limit(5).count();
如果要返回限制之后的记录数量，要使用count(true)或者count(非0)
db.users.find().skip(10).limit(5).count(true);&lt;/p&gt;

&lt;p&gt;分组group()
假设test表只有以下一条数据
{ domain: “www.mongodb.org”
, invoked_at: {d:”2009-11-03”, t:”17:14:05”}
, response_time: 0.05
, http_action: “GET /display/DOCS/Aggregation”
}
使用group统计test表11月份的数据count:count(*)、total_time:sum(response_time)、 avg_time:total_time/count;
db.test.group(
{ cond: {“invoked_at.d”: {$gt: “2009-11”, $lt: “2009-12”}}
, key: {http_action: true}
, initial: {count: 0, total_time:0}
, reduce: function(doc, out){ out.count++; out.total_time+=doc.response_time }
, finalize: function(out){ out.avg_time = out.total_time / out.count }
} );&lt;/p&gt;

&lt;p&gt;[
{
“http_action” : “GET /display/DOCS/Aggregation”,
“count” : 1,
“total_time” : 0.05,
“avg_time” : 0.05
}
]
——————-update———————-
除了查询条件，还可以使用修改器对文档进行更新。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;$inc&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;db.tianyc03.find()
{ “_id” : ObjectId(“50ea6b6f12729d90ce6e341b”), “name” : “xtt”, “age” : 11 }
db.tianyc03.update({name:’xtt’,age:11},{‘$inc’:{age:5}})
db.tianyc03.find()
{ “_id” : ObjectId(“50ea6b6f12729d90ce6e341b”), “name” : “xtt”, “age” : 16 }&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;inc&quot;&gt;$inc还可以添加列。&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;db.tianyc04.find()
{ “_id” : ObjectId(“510c83ad13d7e50c2281b048”), “wc” : 1 }
db.tianyc04.update({wc:1},{$inc:{score:50}})
db.tianyc04.find()
{ “_id” : ObjectId(“510c83ad13d7e50c2281b048”), “score” : 50, “wc” : 1 }&lt;/p&gt;

&lt;/blockquote&gt;

&lt;ol&gt;
  &lt;li&gt;$set&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;用来指定一个键的值，若该键不存在，则创建。如果需要删除该键，使用$unset。&lt;/p&gt;

&lt;h1 id=&quot;sex&quot;&gt;新增加列sex&lt;/h1&gt;
&lt;blockquote&gt;
  &lt;p&gt;db.tianyc03.update({name:’xtt’,age:16},{$set:{sex:’m’}})
db.tianyc03.find()
{ “_id” : ObjectId(“50ea6b6f12729d90ce6e341b”), “age” : 16, “name” : “xtt”, “sex” : “m” }
#修改列sex
db.tianyc03.update({name:’xtt’,age:16},{$set:{sex:’male’}})
db.tianyc03.find()
{ “_id” : ObjectId(“50ea6b6f12729d90ce6e341b”), “age” : 16, “name” : “xtt”, “sex” : “male” }
#改变列sex数据类型
db.tianyc03.update({name:’xtt’,age:16},{$set:{sex:1}})
db.tianyc03.find()
{ “_id” : ObjectId(“50ea6b6f12729d90ce6e341b”), “age” : 16, “name” : “xtt”, “sex” : 1 }
#删除列sex
db.tianyc03.update({name:’xtt’,age:16},{$unset:{sex:1}})
db.tianyc03.find()
{ “_id” : ObjectId(“50ea6b6f12729d90ce6e341b”), “age” : 16, “name” : “xtt” }&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
  &lt;li&gt;$push&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;用来增加数组。若没有改列，则会自动增加。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;db.tianyc03.find()
{ “_id” : ObjectId(“50ea6b6f12729d90ce6e341b”), “age” : 16, “name” : “xtt” }&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;db.tianyc03.update({‘name’:’xtt’},{$push:{companies:’neu’}})
db.tianyc03.find()
{ “_id” : ObjectId(“50ea6b6f12729d90ce6e341b”), “age” : 16, “companies” : [ “neu” ], “name” : “xtt” }&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;db.tianyc03.update({‘name’:’xtt’},{$push:{companies:’alibaba’}})
db.tianyc03.find()
{ “_id” : ObjectId(“50ea6b6f12729d90ce6e341b”), “age” : 16, “companies” : [ “neu”, “alibaba” ], “name” : “xtt” }&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
  &lt;li&gt;$addToSet&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;pushaddtoset&quot;&gt;push操作不会检查数组中元素是否重复，如果需要将不重复的数据加入数组，需要使用$addToSet&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;db.tianyc03.update({‘name’:’xtt’},{$addToSet:{companies:’alibaba’}})&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;db.tianyc03.find()
{ “_id” : ObjectId(“50ea6b6f12729d90ce6e341b”), “age” : 16, “companies” : [ “neu”, “alibaba”, “alibaba” ], “name” : “xtt” }
db.tianyc03.update({‘name’:’xtt’},{$addToSet:{companies:’congxing’}})
db.tianyc03.find()
{ “_id” : ObjectId(“50ea6b6f12729d90ce6e341b”), “age” : 16, “companies” : [ “neu”, “alibaba”, “alibaba”, “congxing” ], “name” : “xtt” }
db.tianyc03.update({‘name’:’xtt’},{$addToSet:{companies:’congxing’}})
db.tianyc03.find()
{ “_id” : ObjectId(“50ea6b6f12729d90ce6e341b”), “age” : 16, “companies” : [ “neu”, “alibaba”, “alibaba”, “congxing” ], “name” : “xtt” }&lt;/p&gt;

&lt;/blockquote&gt;

&lt;ol&gt;
  &lt;li&gt;$pop&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;通过$pop可以从数组中移除数据。此时数据被看成是一个队列。使用{$pop:{key:1}}将从队列末尾移除元素，使用{$pop:{key:-1}}将从队列开头移除元素。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;db.tianyc03.update({‘name’:’xtt’},{$addToSet:{companies:[‘c1’,’c2’]}})
db.tianyc03.find()
{ “_id” : ObjectId(“50ea6b6f12729d90ce6e341b”), “age” : 16, “companies” : [ “neu”, “alibaba”, “alibaba”, “congxing”, [ “c1”, “c2” ] ], “name” : “xtt” }&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;db.tianyc03.update({‘name’:’xtt’},{$pop:{companies:1}})
db.tianyc03.find()
{ “_id” : ObjectId(“50ea6b6f12729d90ce6e341b”), “age” : 16, “companies” : [ “neu”, “alibaba”, “alibaba”, “congxing” ], “name” : “xtt” }&lt;/p&gt;

  &lt;p&gt;db.tianyc03.update({‘name’:’xtt’},{$pop:{companies:-1}})
db.tianyc03.find()
{ “_id” : ObjectId(“50ea6b6f12729d90ce6e341b”), “age” : 16, “companies” : [ “alibaba”, “alibaba”, “congxing” ], “name” : “xtt” }&lt;/p&gt;

&lt;/blockquote&gt;

&lt;ol&gt;
  &lt;li&gt;$pull&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;除了 $pop，也可以使用 $pull 来删除数组中的元素，此时可以根据元素值进行匹配，将匹配上的元素全部删除。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;db.tianyc03.update({‘name’:’xtt’},{$addToSet:{companies:’teletek’}})
db.tianyc03.find()
{ “_id” : ObjectId(“50ea6b6f12729d90ce6e341b”), “age” : 16, “companies” : [ “alibaba”, “alibaba”, “congxing”, “teletek” ], “name” : “xtt” }
db.tianyc03.update({},{$pull:{companies:’congxing’}})
db.tianyc03.find()
{ “_id” : ObjectId(“50ea6b6f12729d90ce6e341b”), “age” : 16, “companies” : [ “alibaba”, “alibaba”, “teletek” ], “name” : “xtt” }&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;db.tianyc03.update({},{$pull:{companies:’alibaba’}})
db.tianyc03.find()
{ “_id” : ObjectId(“50ea6b6f12729d90ce6e341b”), “age” : 16, “companies” : [ “teletek” ], “name” : “xtt” }&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>9月经历</title>
      <link>place_your_blog_url_here/home/2014/10/05/yue.html</link>
      <pubDate>05 Oct 2014</pubDate>
      <author>place_your_name_here</author>
      <guid>place_your_blog_url_here/home/2014/10/05/yue</guid>
      <description>&lt;h2 id=&quot;section&quot;&gt;大三了，时间一恍惚就过去了。&lt;/h2&gt;

&lt;h2 id=&quot;section-1&quot;&gt;今天中午到我妹这里吃饭感觉他们还是没什么变化的。一样的天真。菜还是那种味道。&lt;/h2&gt;

&lt;h2 id=&quot;go-go&quot;&gt;到底应该追求什么东西呢！目标！Go Go&lt;/h2&gt;
</description>
    </item>
    
    <item>
      <title>delphi作业</title>
      <link>place_your_blog_url_here/home/2014/10/05/delphi.html</link>
      <pubDate>05 Oct 2014</pubDate>
      <author>place_your_name_here</author>
      <guid>place_your_blog_url_here/home/2014/10/05/delphi</guid>
      <description>&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;“真正的程序员用VC，聪明的程序员用Delphi”，这句话是对Delphi最经典、最实在的描述。Delphi被称为第四代编程语言，它具有简单、高效、功能强大的特点。和VC相比，Delphi更简单、更易于掌握，而在功能上却丝毫不逊色；和VB相比，Delphi则功能更强大、更实用。可以说Delphi同时兼备了VC功能强大和VB简单易学的特点。它一直是程序员至爱的编程工具。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Delphi具有以下的特性：基于窗体和面向对象的方法，高速的编译器，强大的数据库支持，与Windows编程紧密结合，强大而成熟的组件技术。但最重要的还是Object Pascal语言，它才是一切的根本。Object Pascal语言是在Pascal语言的基础上发展起来的，简单易学。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;delphihttpwwwworlduccomspaceshowindexaspxuid1008546&quot;&gt;&lt;a href=&quot;http://www.worlduc.com/SpaceShow/Index.aspx?uid=1008546&quot;&gt;大学城delphi作业链接&lt;/a&gt;&lt;/h3&gt;
</description>
    </item>
    
  </channel>
</rss>