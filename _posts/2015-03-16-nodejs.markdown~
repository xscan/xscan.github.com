---
layout: post
title: mysql-master-slave
categories: home
---

#mysql master-slave读写分离

##1.配置环境

ubuntu14.10-server-amd64

Mysql-master:192.168.20.102

Mysql-slave:192.168.20.103

##2.打开mysql的远程访问


进入mysql命令行执行
(注解：允许用户myuser从任何主机连接到mysql服务器，并使用mypassword作为密码)

    mysql>GRANT ALL PRIVILEGES ON *.* TO 'myuser'@'%' IDENTIFIED BY '123456' WITH GRANT OPTION;


##3.在master和slave创建同步数据库;

分别在master和slave中执行

    mysql>create database studb;
    mysql>use studb;
    mysql>create table info(id int);

##4.配置master数据库


###1).打开mysql数据库的配置文件，到[mysqld]下添加如下内容（注意：有些配置mysql是默认没有打开的，可以直接去掉注释）


    sudo vi /etc/mysql/my.cnf

    [mysqld]
    server-id               = 1
    log_bin                 = /var/log/mysql/mysql-bin.log
    expire_logs_days        = 10
    max_binlog_size         = 100M
    binlog_do_db            = studb

    #注释
    第一行:一个server-id(注意次id是唯一的)
    第二行:二进制日志文件存放位置和名字
    第三行: 二进制日志自动删除的天数。默认值为0,表示“没有自动删除”
    第四行:最大数据库日志大小
    第五行:需要同步的数据库名字
    （注意：配置修改保存记得重启mysql服务器让配置生效）

###2).创建同步账号
在master中进入mysql命令行执行

    mysql>grant replication slave,replication client on *.* to 'slave'@'%' identified by '123456';

为slave创建一个同步账号

###3).查看master主数据库中的日志文件状态
（注意：要记录下File 和Position下面的值，配置slave时候会用到）

        mysql> show master status
        -> ;
        +------------------+----------+--------------+------------------+
        | File             | Position | Binlog_Do_DB | Binlog_Ignore_DB |
        +------------------+----------+--------------+------------------+
        | mysql-bin.000005 |      695 |              |                  |
        +------------------+----------+--------------+------------------+
        1 row in set (0.00 sec)

##5.配置slave数据库

###1）修改配置文件（类似master的配置）

    [mysqld]
    server-id               = 2
    log_bin                 = /var/log/mysql/mysql-bin.log
    expire_logs_days        = 10
    max_binlog_size         = 100M
    replicate-do-db         = studb
    relay_log               = /var/log/mysql/mysql-relay-bin.log
    log_slave_updates       = 1
    read_only               = 1

    #注释
    第一行:一个server-id(注意次id是唯一的)
    第二行:二进制日志文件存放位置和名字
    第三行: 二进制日志自动删除的天数。默认值为0,表示“没有自动删除”
    第四行:最大数据库日志大小
    第五行:需要同步的数据库名字
    第六七八行：暂时未知
    （注意：配置修改保存记得重启mysql服务器让配置生效）

###2）.配置slave 同步的master

进入slave上的Mysql

    mysql> change master to
        -> master_host='192.168.20.102',
        -> master_user='slave',
        -> master_password='123456',
        -> master_log_file='mysql-bin.000005',
        -> master_log_pos=695;

master_log_file,master_log_pos是在master中的数据

      mysql> show master status ;
      +------------------+----------+--------------+------------------+
      | File             | Position | Binlog_Do_DB | Binlog_Ignore_DB |
      +------------------+----------+--------------+------------------+
      | mysql-bin.000005 |      695 |              |                  |
      +------------------+----------+--------------+------------------+
      1 row in set (0.00 sec)

###3）.启动salve，并查看状态

    mysql>start slave;
    mysql>show slave status\G;

查看这两个进程是否运行,如下表示同步成功

    Slave_IO_Running: Yes
    Slave_SQL_Running: Yes

之后在master服务器插入数据就会同步到slave

#6.小结
mysql采用此分布结构可以有效的缓解主服务器的压力，从而实现负载均衡的作用
